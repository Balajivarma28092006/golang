package main

import (
	"fmt"
	"os"
	"strings"
)

func main() {
	if len(os.Args) < 2 {
		fmt.Println("Enter more than 2 characters as arguments")
		return
	}
	num := strings.ToLower(os.Args[1])
	ascii(num)
}

var digiArt = map[rune][]string{
	'1': {
		`██╗`,
		`███║`,
		`╚██║`,
		` ██║`,
		` ██║`,
		` ╚═╝`,
	},
	'2': {
		`██████╗ `,
		`╚════██╗`,
		` █████╔╝`,
		`██╔═══╝ `,
		`███████╗`,
		`╚══════╝`,
	},
	'3': {
		`██████╗ `,
		`╚════██╗`,
		` █████╔╝`,
		`╚════██╗`,
		`██████╔╝`,
		`╚═════╝ `,
	},
	'4': {
		`██╗  ██╗`,
		`██║  ██║`,
		`██████╔╝`,
		`╚════██╗`,
		`    ██╔╝`,
		`    ╚═╝ `,
	},
	'5': {
		`██████╗ `,
		`██╔═══╝ `,
		`██████╗ `,
		`╚════██╗`,
		`██████╔╝`,
		`╚═════╝ `,
	},
	'6': {
		` █████╗ `,
		`██╔═══╝ `,
		`██████╗ `,
		`██╔══██╗`,
		`╚█████╔╝`,
		` ╚════╝ `,
	},
	'7': {
		`██████╗ `,
		`╚════██╗`,
		`    ██╔╝`,
		`   ██╔╝ `,
		`  ██╔╝  `,
		`  ╚═╝   `,
	},
	'8': {
		` █████╗ `,
		`██╔══██╗`,
		`╚█████╔╝`,
		`██╔══██╗`,
		`╚█████╔╝`,
		` ╚════╝ `,
	},
	'9': {
		` █████╗ `,
		`██╔══██╗`,
		`╚██████║`,
		` ╚═══██║`,
		` █████╔╝`,
		` ╚════╝ `,
	},
	'0': {
		` █████╗ `,
		`██╔══██╗`,
		`██║  ██║`,
		`██║  ██║`,
		`╚█████╔╝`,
		` ╚════╝ `,
	},
	'a': {
		` █████╗ `,
		`██╔══██╗`,
		`███████║`,
		`██╔══██║`,
		`██║  ██║`,
		`╚═╝  ╚═╝`,
	},
	'b': {
		`██████╗ `,
		`██╔══██╗`,
		`██████╔╝`,
		`██╔══██╗`,
		`██████╔╝`,
		`╚═════╝ `,
	},
	'c': {
		` █████╗ `,
		`██╔═══╝ `,
		`██║     `,
		`██║     `,
		`╚█████╗ `,
		` ╚════╝ `,
	},
	'd': {
		`██████╗ `,
		`██╔══██╗`,
		`██║  ██║`,
		`██║  ██║`,
		`██████╔╝`,
		`╚═════╝ `,
	},
	'e': {
		`██████╗ `,
		`██╔═══╝ `,
		`█████╗  `,
		`██╔══╝  `,
		`██████╗ `,
		`╚═════╝ `,
	},
	'f': {
		`██████╗ `,
		`██╔═══╝ `,
		`█████╗  `,
		`██╔══╝  `,
		`██║     `,
		`╚═╝     `,
	},
	'g': {
		` █████╗ `,
		`██╔═══╝ `,
		`██║  ██╗`,
		`██║  ██║`,
		`╚█████╔╝`,
		` ╚════╝ `,
	},
	'h': {
		`██╗  ██╗`,
		`██║  ██║`,
		`███████║`,
		`██╔══██║`,
		`██║  ██║`,
		`╚═╝  ╚═╝`,
	},
	'i': {
		`██╗`,
		`██║`,
		`██║`,
		`██║`,
		`██║`,
		`╚═╝`,
	},
	'j': {
		`    ██╗`,
		`    ██║`,
		`    ██║`,
		`██  ██║`,
		`╚████║ `,
		` ╚═══╝ `,
	},
	'k': {
		`██╗ ██╗`,
		`██║██╔╝`,
		`████╔╝ `,
		`██╔██╗ `,
		`██║╚██╗`,
		`╚═╝ ╚═╝`,
	},
	'l': {
		`██╗   `,
		`██║   `,
		`██║   `,
		`██║   `,
		`██████╗`,
		`╚═════╝`,
	},
	'm': {
		`███╗   ███╗`,
		`████╗ ████║`,
		`██╔████╔██║`,
		`██║╚██╔╝██║`,
		`██║ ╚═╝ ██║`,
		`╚═╝     ╚═╝`,
	},
	'n': {
		`███╗  ██╗`,
		`████╗ ██║`,
		`██╔██╗██║`,
		`██║╚████║`,
		`██║ ╚███║`,
		`╚═╝  ╚══╝`,
	},
	'o': {
		` █████╗ `,
		`██╔══██╗`,
		`██║  ██║`,
		`██║  ██║`,
		`╚█████╔╝`,
		` ╚════╝ `,
	},
	'p': {
		`██████╗ `,
		`██╔══██╗`,
		`██████╔╝`,
		`██╔═══╝ `,
		`██║     `,
		`╚═╝     `,
	},
	'q': {
		` █████╗ `,
		`██╔══██╗`,
		`██║  ██║`,
		`██║  ██║`,
		`╚█████╔╝`,
		` ╚═══██╗`,
	},
	'r': {
		`██████╗ `,
		`██╔══██╗`,
		`██████╔╝`,
		`██╔══██╗`,
		`██║  ██║`,
		`╚═╝  ╚═╝`,
	},
	's': {
		` █████╗ `,
		`██╔═══╝ `,
		`╚█████╗ `,
		` ╚═══██╗`,
		`██████╔╝`,
		`╚═════╝ `,
	},
	't': {
		`██████╗ `,
		`╚══██╔╝ `,
		`   ██║  `,
		`   ██║  `,
		`   ██║  `,
		`   ╚═╝  `,
	},
	'u': {
		`██╗  ██╗`,
		`██║  ██║`,
		`██║  ██║`,
		`██║  ██║`,
		`╚█████╔╝`,
		` ╚════╝ `,
	},
	'v': {
		`██╗   ██╗`,
		`██║   ██║`,
		`╚██╗ ██╔╝`,
		` ╚████╔╝ `,
		`  ╚██╔╝  `,
		`   ╚═╝   `,
	},
	'w': {
		`██╗    ██╗`,
		`██║    ██║`,
		`██║ █╗ ██║`,
		`██║███╗██║`,
		`╚███╔███╔╝`,
		` ╚══╝╚══╝ `,
	},
	'x': {
		`██╗  ██╗`,
		`╚██╗██╔╝`,
		` ╚███╔╝ `,
		` ██╔██╗ `,
		`██╔╝╚██╗`,
		`╚═╝  ╚═╝`,
	},
	'y': {
		`██╗  ██╗`,
		`╚██╗██╔╝`,
		` ╚███╔╝ `,
		`  ██╔╝  `,
		`  ██║   `,
		`  ╚═╝   `,
	},
	'z': {
		`██████╗ `,
		`╚══██╔╝ `,
		`  ██╔╝  `,
		` ██╔╝   `,
		`██████╗ `,
		`╚═════╝ `,
	},
}

func ascii(number string) {
	for _, c := range number {
		if _, ok := digiArt[c]; !ok {
			fmt.Printf("Invalid digit %c\n", c)
			return
		}
	}
	for line := 0; line < 5; line++ {
		for _, c := range number {
			fmt.Print(digiArt[c][line] + "  ")
		}
		fmt.Println()
	}
}
